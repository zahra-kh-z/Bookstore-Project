"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y&pt3_5w)ob-6s+ux-xoz24xs3^513zagvseqk1xf!y(lc984c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',  # Yoohoo!!!!
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # new for Django’s sites framework

    # Third-party
    'crispy_forms',  # install django-crispy-forms==1.9.2
    'allauth',  # new
    'allauth.account',  # pip install django-allauth==0.42.0

    # Local
    'accounts',  # new
    'pages',  # new
    'books',  # new
]

# django-crispy-form
CRISPY_TEMPLATE_PACK = 'bootstrap4'  # new
AUTH_USER_MODEL = 'accounts.CustomUser'  # new

# django-allauth config
LOGIN_REDIRECT_URL = 'home'
# LOGOUT_REDIRECT_URL = 'home'  # new
ACCOUNT_LOGOUT_REDIRECT = 'home'  # new
SITE_ID = 1  # if add 2 site then ID=2
# used when Django attempts to authenticate a user.
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    # specific authentication options, switch over to using login via e-mail in a moment
    'allauth.account.auth_backends.AuthenticationBackend',
)
# if we don’t yet have a SMTP server, Django output any emails to the command line console instead of smtp
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# if use email service like SendGrid, MailGun, use SMTP
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # new

# after added above change , run python manage.py migrate

# for “Remember Me” box option dont show in login page.
# ACCOUNT_SESSION_REMEMBER = True  # new

ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False  # new

# for Email Only Login
ACCOUNT_USERNAME_REQUIRED = False  # new
ACCOUNT_AUTHENTICATION_METHOD = 'email'  # new
ACCOUNT_EMAIL_REQUIRED = True  # new
ACCOUNT_UNIQUE_EMAIL = True  # new

# email was from webmaster@localhost, can change with DEFAULT_FROM_EMAIL
DEFAULT_FROM_EMAIL = 'admin@djangobookstore.com'

# use gmail for email service
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # new
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'zahra.kh2005@gmail.com'
EMAIL_HOST_PASSWORD = 'wkofzkrxnwjzbymk'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('templates'))],  # new
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres_10',
        'USER': 'postgres',
        'PASSWORD': 'zahra1399',
        'HOST': '127.0.0.1',
        'PORT': 5432
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (str(BASE_DIR.joinpath('static')),)  # new
STATIC_ROOT = str(BASE_DIR.joinpath('staticfiles'))  # new
STATICFILES_FINDERS = [  # new
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
